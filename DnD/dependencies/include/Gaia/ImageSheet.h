#ifndef H__IMAGESHEET__H
#define H__IMAGESHEET__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include <map>

#include "Gaia/BaseTexture.h"
#include "Gaia/Image.h"
#include "Gaia/tools/Exceptions.h"

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Class containing a texture, and defining one or more images, located
/// on the texture.
///////////////////////////////////////////////////////////////////////////////
class GAIA_DLL ImageSheet
{
public:
	///////////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param path : Texture path.
	/// \param name : Name of the image sheet.
	///////////////////////////////////////////////////////////////////////////////
	ImageSheet(const std::string& path = "", const std::string& name = "");

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param tex : Smart pointer to the texture to assign.
	/// \param nom : Name of the image sheet.
	///////////////////////////////////////////////////////////////////////////////
	ImageSheet(PtrTexture im, const std::string& nom);

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Destructor.
	///////////////////////////////////////////////////////////////////////////////
	~ImageSheet(void);

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Sets the name of the sheet.
	/// 
	/// \param name: The name to set.
	///////////////////////////////////////////////////////////////////////////////
	void setName(const std::string& name) {myName = name;}

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Loads a texture.
	/// 
	/// \param path : The path to the texture.
	///////////////////////////////////////////////////////////////////////////////
	void loadTexture(const std::string& path);

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Defines a new images from its texture coordinates.
	///
	/// \param name : Name to give to this image.
	/// \param dest : Image area on the texture.
	///////////////////////////////////////////////////////////////////////////////
	void addImage(const std::string& name, const gaia::IntRect& dest);

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Returns a pointer to the image defined by its name.
	///
	/// Returns NULL if the image was not found.
	///
	/// \param name : The name of the image.
	///
	/// \return A pointer to the image
	///////////////////////////////////////////////////////////////////////////////
	Image* getImage(const std::string& name);

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Returns the name of the image sheet.
	///////////////////////////////////////////////////////////////////////////////
	const std::string& getName() const {return myName;}

protected:
	PtrTexture myTexture; ///< Pointer the texture used.

	std::map<std::string, Image> myImages; ///< Image list by name.

	std::string myName; ///< Sheet name.
};

};
#endif
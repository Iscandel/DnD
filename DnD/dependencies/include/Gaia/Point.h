#ifndef H__POINT050920112111__H
#define H__POINT050920112111__H

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// Utility class for 2D position
///////////////////////////////////////////////////////////////////////////////
struct Point
{
	///////////////////////////////////////////////////////////////////////////////
	/// Constructor
	/// \param x: x position
	/// \param y: y position
	///////////////////////////////////////////////////////////////////////////////
	Point(int x = 0, int y = 0)
	:x(x)
	,y(y)
	{
	}

	///////////////////////////////////////////////////////////////////////////////
	/// Compares 2 points. The 2 coordinates must be equal.
	///////////////////////////////////////////////////////////////////////////////
	friend bool operator == (const Point& c1, const Point& c2)
	{
		return c1.x == c2.x && c1.y == c2.y;
	}

	///////////////////////////////////////////////////////////////////////////////
	/// Compares 2 points. The 2 coordinates must be equal.
	///////////////////////////////////////////////////////////////////////////////
	friend bool operator != (const Point& c1, const Point& c2)
	{
		return !(c1 == c2);
	}

	int x; ///< x coordinate
	int y; ///< y coordinate
};

///////////////////////////////////////////////////////////////////////////////
/// Adds 2 points
///////////////////////////////////////////////////////////////////////////////
inline Point operator + (const Point& c1, const Point& c2)
{
	Point res;

	res.x = c1.x + c2.x;
	res.y = c1.y + c2.y;
	
	return res;
}

///////////////////////////////////////////////////////////////////////////////
/// Adds 2 points
///////////////////////////////////////////////////////////////////////////////
inline Point& operator += (Point& c1, const Point& c2)
{
	c1 = c1 + c2;
	return c1;
};

///////////////////////////////////////////////////////////////////////////////
/// Subtracts 2 points
///////////////////////////////////////////////////////////////////////////////
inline Point operator - (const Point& c1, const Point& c2)
{
	Point res;

	res.x = c1.x - c2.x;
	res.y = c1.y - c2.y;
	
	return res;
}

///////////////////////////////////////////////////////////////////////////////
/// Subtracts 2 points
///////////////////////////////////////////////////////////////////////////////
inline Point& operator -= (Point& c1, const Point& c2)
{
	c1 = c1 - c2;
	return c1;
}

} //End namespace

#endif
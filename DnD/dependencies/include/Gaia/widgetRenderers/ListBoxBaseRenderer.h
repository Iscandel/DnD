#ifndef H__LISTBOXBASERENDERER_220920112242__H
#define H__LISTBOXBASERENDERER_220920112242__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/widgetRenderers/WidgetRenderer.h"
#include "Gaia/widgets/ListBox.h"

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Base class for ListBox renderer.
///////////////////////////////////////////////////////////////////////////////
class GAIA_DLL ListBoxBaseRenderer : public TplWidgetRenderer<ListBox>
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// \param widget : A pointer to the widget owning the renderer.
	///////////////////////////////////////////////////////////////////////////
	ListBoxBaseRenderer(PtrWidget w = PtrWidget());

	///////////////////////////////////////////////////////////////////////////
	/// \brief Computes the current selected item from the given position.
	///
	/// \param pos : Position to test.
	///////////////////////////////////////////////////////////////////////////
	int computeSelectedItem(const Point& pos);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Returns the first visible item.
	///
	/// \return Index of the first visble item.
	///////////////////////////////////////////////////////////////////////////
	int getFirstVisibleItem();

	void constructCacheHeight();

	///////////////////////////////////////////////////////////////////////////
	/// \brief Returns the item area.
	///
	/// \return A rectangle defining the item area.
	///////////////////////////////////////////////////////////////////////////
	//Rect<double> getItemArea();
	IntRect getItemArea();

protected:
	std::vector<int> myHeights;
};

} //end namespace

#endif
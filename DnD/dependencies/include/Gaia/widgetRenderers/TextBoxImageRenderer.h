#ifndef H__TEXTBOXIMAGERENDERER_H__190620120017
#define H__TEXTBOXIMAGERENDERER_H__190620120017

#include "Gaia/widgetRenderers/TextBoxBaseRenderer.h"

#include "Gaia/Color.h"
#include "Gaia/widgets/TextBox.h"

namespace gaia
{
class GAIA_DLL TextBoxImageRenderer : public TextBoxBaseRenderer
{
public:
///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param w : The widgets set to the renderer. Must be a TextBox class, or
	/// inherited.
	///////////////////////////////////////////////////////////////////////////
	TextBoxImageRenderer(PtrWidget w = PtrWidget());

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget.  
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	virtual void draw_impl(BaseGraphics* Gfx);

protected:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the background.
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawBackground(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the visible text.
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawText(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the TextBox's caret, if it is currently visible.
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawCaret(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the selection.
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawSelection(BaseGraphics* Gf);
};

} //end namespace

#endif
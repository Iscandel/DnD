#ifndef H__LISTBOXSIMPLERENDERER_230820112247_H
#define H__LISTBOXSIMPLERENDERER_230820112247_H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/widgetRenderers/ListBoxBaseRenderer.h"

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Shape renderer for ListBox's.
///////////////////////////////////////////////////////////////////////////////
class GAIA_DLL ListBoxSimpleRenderer : public ListBoxBaseRenderer
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// \param widget : A pointer to the widget owning the renderer.
	///////////////////////////////////////////////////////////////////////////
	ListBoxSimpleRenderer(PtrWidget w = PtrWidget());

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget. 
	///
	/// Should be overriden by derived class to perform the drawing.
	///
	/// \param Gfx : Pointer the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	virtual void draw_impl(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the background. 
	///
	/// \param Gfx : Pointer the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawBackground(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the visible items. 
	///
	/// \param Gfx : Pointer the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawItems(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Defines the background color.
	///
	/// \param color : the color to apply.
	///////////////////////////////////////////////////////////////////////////
	void setBackgroundColor(const Color& color);

protected:
	Color myBackgroundColor;
};

} //end namespace

#endif
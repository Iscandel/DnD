#ifndef H__WINDOWSIMPLERENDERER_301020111513__H
#define H__WINDOWSIMPLERENDERER_301020111513__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/widgetRenderers/WidgetRenderer.h"
#include "Gaia/widgets/Window.h"

namespace gaia
{
class GAIA_DLL TitleBarSimpleRenderer : public gaia::TplWidgetRenderer<TitleBar>
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param w : The widgets set to the renderer. Must be a Label class, or
	/// inherited.
	///////////////////////////////////////////////////////////////////////////
	TitleBarSimpleRenderer(PtrWidget widget = PtrWidget());

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget.  
	///
	/// \param Gfx : Pointer the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void draw_impl(BaseGraphics* Gfx);
};

class GAIA_DLL WindowSimpleRenderer :
	public gaia::TplWidgetRenderer<Window>
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param w : The widgets set to the renderer. Must be a Label class, or
	/// inherited.
	///////////////////////////////////////////////////////////////////////////
	WindowSimpleRenderer(PtrWidget widget = PtrWidget());

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget.  
	///
	/// \param Gfx : Pointer the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void draw_impl(BaseGraphics* Gfx);
};

} //end namespace

#endif
#ifndef H__BUTTONIMAGERENDERER_100920112027__H
#define H__BUTTONIMAGERENDERER_100920112027__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/widgetRenderers/WidgetRenderer.h"
#include "Gaia/widgets/Button.h"

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Image renderer for buttons.
///////////////////////////////////////////////////////////////////////////////
class GAIA_DLL ButtonImageRenderer : public gaia::TplWidgetRenderer<Button>
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param w : The widgets set to the renderer. Must be a button class, or
	/// inherited.
	///////////////////////////////////////////////////////////////////////////
	ButtonImageRenderer(PtrWidget w = PtrWidget());

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget.  
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void draw_impl(BaseGraphics* Gfx);
	
	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget text. 
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	void drawText(BaseGraphics* Gfx);

protected:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Retrieves the text area.
	///
	/// \return A rectangle defining the text area.
	///////////////////////////////////////////////////////////////////////////
	Rect<double> getTextArea();
};

} //end namespace

#endif
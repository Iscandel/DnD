#ifndef H__BASESCROLLBARRENDERER_160720111936__H
#define H__BASESCROLLBARRENDERER_160720111936__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/widgetRenderers/WidgetRenderer.h"
#include "Gaia/Point.h"
#include "Gaia/widgets/ScrollBar.h"

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Base renderer for ScrollBar.
///////////////////////////////////////////////////////////////////////////////
class GAIA_DLL ScrollBarBaseRenderer :
	public gaia::TplWidgetRenderer<gaia::ScrollBar>
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param w : The widgets set to the renderer. Must be a button class, or
	/// inherited.
	///////////////////////////////////////////////////////////////////////////
	ScrollBarBaseRenderer(PtrWidget w = PtrWidget()):TplWidgetRenderer(w) {}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Draws the widget.  
	///
	/// \param Gfx : Pointer to the graphics engine.
	///////////////////////////////////////////////////////////////////////////
	virtual void draw_impl(BaseGraphics* Gfx);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Computes the ScrollBar value.
	///
	/// \param topEndThumb : Position of the top end of the thumb, relatively
	/// to the ScrollBar coordinate system.
	///////////////////////////////////////////////////////////////////////////
	float valueFromThumbPos(const Point& topEndThumb);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Computes the visual thumb position.
	///////////////////////////////////////////////////////////////////////////
	void setThumbPosition();

	///////////////////////////////////////////////////////////////////////////
	/// \brief Returns the thumb area.
	///
	/// \return The thumb area.
	///////////////////////////////////////////////////////////////////////////
	Rect<double> getThumbArea();
};

}

#endif
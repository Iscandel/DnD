#ifndef H__SFMLIMAGELOADER_180920110114__H
#define H__SFMLIMAGELOADER_180920110114__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/SFMLRenderer/SFMLConfig.h"
#include "Gaia/BaseImageLoader.h"

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief SFML implementation of the ImageLoader class.
///////////////////////////////////////////////////////////////////////////////
class GAIA_SFML_DLL SFMLImageLoader : public gaia::BaseImageLoader
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief SFML image loader.
	///
	/// \param smooth : True to smooth, false not to smooth.
	///////////////////////////////////////////////////////////////////////////
	SFMLImageLoader(bool smooth = true);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Load a texture using the path name.
	///
	/// \param path : path of the file.
	///////////////////////////////////////////////////////////////////////////
	virtual PtrTexture load(const std::string& path);

	///////////////////////////////////////////////////////////////////////////
	/// \brief Defines whether the image should be smoothed when drawn.
	///
	/// \param smooth : True to smooth, false not to smooth.
	///////////////////////////////////////////////////////////////////////////
	void setSmooth(bool smooth) {mySmooth = smooth;}

protected:
	bool mySmooth;
};

} //end namespace

#endif
#ifndef H__ITEXT_100920112113__H
#define H__ITEXT_100920112113__H

///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/BaseFont.h"

#include <string>

namespace gaia
{
///////////////////////////////////////////////////////////////////////////////
/// \brief Interface intended to a widget dealing with text.
///////////////////////////////////////////////////////////////////////////////
class GAIA_DLL IText
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///////////////////////////////////////////////////////////////////////////
	IText()
	:myFontSize(15)
	{
		myFont = BaseFont::getDefaultFont();
	}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Defines the text color.
	///
	/// \param col : The color to set.
	///////////////////////////////////////////////////////////////////////////
	void setTextColor(const Color& col){myTextColor = col;}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Defines the font size.
	/// 
	/// \param height : Character height.
	///////////////////////////////////////////////////////////////////////////
	void setFontSize(unsigned int height) {myFontSize = height;}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Defines the font.
	///
	/// \param font : The font to set.
	///////////////////////////////////////////////////////////////////////////
	void setFont(PtrFont font)
	{
		myFont = font;
	}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Returns the text color.
	///
	/// \return The text color.
	///////////////////////////////////////////////////////////////////////////
	const Color& getTextColor() const {return myTextColor;}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Returns the font size.
	///
	/// \return The character height.
	///////////////////////////////////////////////////////////////////////////
	unsigned int getFontSize() const {return  myFontSize;}

	///////////////////////////////////////////////////////////////////////////
	/// \brief Returns the font.
	///
	/// \return A smart pointer to the font.
	///////////////////////////////////////////////////////////////////////////
	PtrFont getFont() const {return myFont;}

protected:
	unsigned int myFontSize; ///< Character height.
	Color myTextColor; ///< Text color.
	PtrFont myFont; ///< Pointer to the font.
};

};

#endif